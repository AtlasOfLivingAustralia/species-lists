AWSTemplateFormatVersion: '2010-09-09'

Description: 'A DocumentDB Cluster with AutoScaling'

Parameters:
  pAdminUser:
    Description: The username for the DocumentDB admin user
    Type: String
    Default: admin
  pInstanceClass:
    Description: The DocumentDB instance class
    Type: String
    Default: db.t4g.medium
  pBackupRetentionPeriod:
    Description: The number of days to retain backups for
    Type: Number
    Default: 7
  pDbEngineVersion:
    Description: The DocumentDB engine version
    Type: String
    Default: 4.0.0
  pDbParameterGroupFamily:
    Description: The DocumentDB parameter group family
    Type: String
    Default: docdb4.0
  pInstanceCount:
    Description: The number of instances in the DocumentDB cluster
    Type: Number
    Default: 1
  pVpcStackName:
    Description: The name of the Bedrock VPC stack
    Type: String
  pBuild:
    Description: The CodeBuild build number
    Type: Number
  pCleanBranch:
    Description: The clean branch
    Type: String
  pProductName:
    Description: The product name
    Type: String
  pEnvironment:
    Description: Environment for this DocumentDB instance
    AllowedValues:
      - development
      - develop
      - staging
      - production
    Type: String

Conditions:
  IsDev: !Equals
    - !Ref pEnvironment
    - development
  IsProd: !Equals
    - !Ref pEnvironment
    - production

Resources:

  DocDbPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      # if the name of the secret is changed make sure you change the value for the DocDbCluster.Properties.MasterUserPassword 
      # and the  stack Output.DocDbPasswordSecretName
      Name: !Sub 
              - lists-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: !Sub Lists app ${pEnvironment} secrets
      GenerateSecretString: 
        GenerateStringKey: db-password
        PasswordLength: 12
        ExcludeCharacters: "/@\" \\+%"
        SecretStringTemplate: |
                {
                   "db-password" : ""
                }

  DocDbSubnetGrp:
    Type: AWS::DocDB::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DocumentDB subnet group
      SubnetIds: !Split
        - ','
        - Fn::ImportValue:
            Fn::Sub: ${pVpcStackName}-PriSubnets
      Tags:
        - Key: Name
          Value: !Sub
            - ${pProductName}-${ResourceName}-subnet-group
            - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]

  DocDbSecurityGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access from the VPC
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${pVpcStackName}-Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          CidrIp:
            Fn::ImportValue:
              Fn::Sub: ${pVpcStackName}-VpcCidr
      Tags:
        - Key: Name
          Value: !Sub
            - ${pProductName}-${ResourceName}-security-group
            - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]

  DocDbClusterParameterGroup:
    Type: AWS::DocDB::DBClusterParameterGroup
    Properties:
      Name: !Sub
        - ${pProductName}-${ResourceName}-cluster-pg
        - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: DocumentDB cluster parameter group
      Family: !Ref pDbParameterGroupFamily
      Parameters:
        tls: enabled
        audit_logs: enabled
        ttl_monitor: enabled
      Tags:
        - Key: Name
          Value: !Sub
            - ${pProductName}-${ResourceName}-cluster-pg
            - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]

  DocDbCluster:
    Type: AWS::DocDB::DBCluster
    DependsOn: 
      - DocDbPasswordSecret
      - DocDbClusterParameterGroup
      - DocDbSecurityGrp
      - DocDbSubnetGrp
    Properties:
      CopyTagsToSnapshot: true
      BackupRetentionPeriod: !Ref pBackupRetentionPeriod
      DBClusterIdentifier: !Sub
        - ${pProductName}-${ResourceName}-cluster
        - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      DBClusterParameterGroupName: !Ref DocDbClusterParameterGroup
      DBSubnetGroupName: !Ref DocDbSubnetGrp
      DeletionProtection: !If [ IsProd, true, false ]
      EngineVersion: !Ref pDbEngineVersion
      MasterUsername: !Ref pAdminUser
      MasterUserPassword: !Sub
        - '{{resolve:secretsmanager:lists-${ResourceName}:SecretString:db-password}}'
        - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      PreferredBackupWindow: 16:00-17:00
      PreferredMaintenanceWindow: tue:17:00-tue:19:00
      StorageEncrypted: true
      Tags:
        - Key: Name
          Value: !Sub
            - ${pProductName}-${ResourceName}-cluster
            - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      VpcSecurityGroupIds:
        - !Ref DocDbSecurityGrp

  DocDbInstance:
    Type: AWS::DocDB::DBInstance
    DependsOn: DocDbCluster
    Properties:
      DBClusterIdentifier: !Ref DocDbCluster
      DBInstanceClass: !Ref pInstanceClass
      AutoMinorVersionUpgrade: true
      Tags:
        - Key: Name
          Value: !Sub
            - ${pProductName}-${ResourceName}-instance
            - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]

Outputs:

  DocDbPasswordSecret:
    Description: The Secrets name for lists 
    Value: !Ref DocDbPasswordSecret
    Export:
      Name: !Sub ${AWS::StackName}-DocDbPasswordSecret

  DocDbPasswordSecretName:
    Description: The Secrets name for lists 
    Value: !Sub
      - lists-${ResourceName}
      - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
    Export:
      Name: !Sub ${AWS::StackName}-DocDbPasswordSecretName

  DocDbClusterEndpoint:
    Description: The endpoint of the DocumentDB cluster
    Value: !GetAtt DocDbCluster.Endpoint
    Export:
      Name: !Sub ${AWS::StackName}-DocDbClusterEndpoint
  
  DocDbClusterReaderEndpoint:
    Description: The reader endpoint of the DocumentDB cluster
    Value: !GetAtt DocDbCluster.ReadEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-DocDbClusterReaderEndpoint