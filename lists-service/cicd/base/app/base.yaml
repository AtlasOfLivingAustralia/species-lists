AWSTemplateFormatVersion: '2010-09-09'

Description: Base resources for the Lists service

Parameters:
  pBuild:
    Type: String
    Description: The build number
  pCleanBranch:
    Type: String
    Description: The clean branch, can be used in resource names
  pEnvironment:
    Type: String
    Description: The AWS environment this belongs to
  pCognitoStackName:
    Type: String
    Description: The name of the Cognito stack
  pAppClientDomain:
    Type: String
    Description: The domain for the app client

Conditions:

  IsDev: !Equals
    - !Ref pEnvironment
    - development
  NotProd: !Not
    - !Equals
      - !Ref pEnvironment
      - production
  IsFirstBuild: !Equals [!Ref pBuild, "1"]

Resources:

  ListsRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: !If [ NotProd, true, false ]
      EncryptionConfiguration:
        EncryptionType: AES256
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: !Sub
                         - lists-${ResourceName}
                         - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      RepositoryPolicyText:
        Version: 2012-10-17
        Statement:
          - Sid: AllowPublicPull
            Effect: Allow
            Principal: '*'
            Action:
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:BatchCheckLayerAvailability'
      Tags:
        - Key: Environment
          Value: !Ref pEnvironment
        - Key: Branch
          Value: !Ref pCleanBranch

  ListsSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub 
              - lists-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: !Sub Lists app ${pEnvironment} secrets
      GenerateSecretString: 
        GenerateStringKey: db-password
        PasswordLength: 12
        ExcludeCharacters: "/@\" "
        SecretStringTemplate: |
                {
                   "db-password" : ""
                }

  AppClient:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        pName: !Sub
          - species-lists-${ResourceName}
          - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
        pCallbackUrls: !Join
          - ','
          - - !Sub https://${pAppClientDomain}
        pDefaultUrl: !Sub https://${pAppClientDomain}
        pLogoutUrls: !Join
          - ','
          - - !Sub https://${pAppClientDomain}
        pScopes: !Join
          - ','
          - - email
            - openid
            - profile
            - ala/roles
            - ala/attrs
        pGenerateSecret: false
        pAllowedOAuthFlows: !Join
          - ','
          - - code
        pUserPoolId:
          Fn::ImportValue:
            Fn::Sub: ${pCognitoStackName}-UserPoolId
      TemplateURL: !Sub
        - https://${AppClientBucket}.s3.${AWS::Region}.amazonaws.com/cicd/cognito/app/app_client.yaml
        - AppClientBucket:
            Fn::ImportValue:
                      Fn::Sub: ${pCognitoStackName}-AppClientBucket
      TimeoutInMinutes: 5

Outputs:

  ListsRepositoryArn:
    Description: The ECR repository ARN for the Lists service
    Value: !GetAtt ListsRepository.Arn

  ListsRepositoryUri:
    Description: The ECR repository URI for the lists service
    Value: !GetAtt ListsRepository.RepositoryUri
    Export:
      Name: !Sub ${AWS::StackName}-ListsRepositoryUri

  ListsRepositoryName:
    Description: The ECR repository ARN for the Lists service
    Value: !Ref ListsRepository

  ListsSecret:
    Description: The Secrets name for lists 
    Value: !Ref ListsSecret

  ListsAppClient:
    Description: The app client for the lists service
    Value: !GetAtt AppClient.Outputs.AppClientId